{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "InfosyncADF1"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"GoogleCloudStorage1_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'GoogleCloudStorage1'"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://InfosyncKeyVault.vault.azure.net/"
		},
		"GoogleCloudStorage1_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "GOOG1EKV734A2AVEQE2POVNMBUFWI7KZOITIXMSAFVTUK6L67XRE4WCSSVMLU"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_44d')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_44d",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/redacted-2022-december-31-wprdc.csv"
							},
							{
								"name": "Destination",
								"value": "datafactory/input/paydata"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "GoogleCloudStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_44d",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_44d",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Power Query1",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [
							{
								"activity": "Copy_44d",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "powerquery1",
								"type": "DataFlowReference",
								"datasetParameters": {
									"DelimitedText1": {},
									"UserQueryDelimitedText1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQueryDelimitedText1",
											"dataset": {
												"referenceName": "DelimitedText1",
												"type": "DatasetReference",
												"parameters": {}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\t{Combo Name} as string,\n\t\tDEPARTMENT as string,\n\t\tJOB_TITLE as string,\n\t\tELECTED_OFFICIAL as string,\n\t\tDATE_STARTED as string,\n\t\tSEX as string,\n\t\tETHNICITY as string,\n\t\tORIG_START as string,\n\t\tDATE_TERM as string,\n\t\tPAY_STATUS as string,\n\t\t{ ANNUAL_SALARY } as string,\n\t\t{ REGULAR_PAY } as string,\n\t\t{ OVERTIME_PAY } as string,\n\t\t{ INCENTIVE_PAY } as string,\n\t\t{ GROSS_PAY } as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserQueryDelimitedText1"
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy_sxa",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Power Query1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/redacted-2022-december-31-wprdc.csv"
							},
							{
								"name": "Destination",
								"value": "datafactory/output/SecondDatafile"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "GoogleCloudStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_sxa",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_sxa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "PowerQuery2",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [
							{
								"activity": "Copy_sxa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "powerquery2",
								"type": "DataFlowReference",
								"datasetParameters": {
									"DelimitedText2": {},
									"UserQueryDelimitedText2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQueryDelimitedText2",
											"dataset": {
												"referenceName": "DelimitedText2",
												"type": "DatasetReference",
												"parameters": {}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tFIRST_NAME as string,\n\t\tLAST_NAME as string,\n\t\t{Combo Name} as string,\n\t\tDEPARTMENT as string,\n\t\tJOB_TITLE as string,\n\t\tELECTED_OFFICIAL as string,\n\t\tDATE_STARTED as string,\n\t\tSEX as string,\n\t\tETHNICITY as string,\n\t\tORIG_START as string,\n\t\tDATE_TERM as string,\n\t\tPAY_STATUS as string,\n\t\t{ ANNUAL_SALARY } as string,\n\t\t{ REGULAR_PAY } as string,\n\t\t{ OVERTIME_PAY } as string,\n\t\t{ INCENTIVE_PAY } as string,\n\t\t{ GROSS_PAY } as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserQueryDelimitedText2"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [
					"Test Annotation"
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_44d')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_44d')]",
				"[concat(variables('factoryId'), '/dataflows/powerquery1')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset_sxa')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_sxa')]",
				"[concat(variables('factoryId'), '/dataflows/powerquery2')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "paydata",
						"folderPath": "output",
						"container": "datafactory"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FIRST_NAME",
						"type": "String"
					},
					{
						"name": "LAST_NAME",
						"type": "String"
					},
					{
						"name": "Combo Name",
						"type": "String"
					},
					{
						"name": "DEPARTMENT",
						"type": "String"
					},
					{
						"name": "JOB_TITLE",
						"type": "String"
					},
					{
						"name": "ELECTED_OFFICIAL",
						"type": "String"
					},
					{
						"name": "DATE_STARTED",
						"type": "String"
					},
					{
						"name": "SEX",
						"type": "String"
					},
					{
						"name": "ETHNICITY",
						"type": "String"
					},
					{
						"name": "ORIG_START",
						"type": "String"
					},
					{
						"name": "DATE_TERM",
						"type": "String"
					},
					{
						"name": "PAY_STATUS",
						"type": "String"
					},
					{
						"name": " ANNUAL_SALARY ",
						"type": "String"
					},
					{
						"name": " REGULAR_PAY ",
						"type": "String"
					},
					{
						"name": " OVERTIME_PAY ",
						"type": "String"
					},
					{
						"name": " INCENTIVE_PAY ",
						"type": "String"
					},
					{
						"name": " GROSS_PAY ",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SecondDatafile",
						"folderPath": "output",
						"container": "datafactory"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FIRST_NAME",
						"type": "String"
					},
					{
						"name": "LAST_NAME",
						"type": "String"
					},
					{
						"name": "Combo Name",
						"type": "String"
					},
					{
						"name": "DEPARTMENT",
						"type": "String"
					},
					{
						"name": "JOB_TITLE",
						"type": "String"
					},
					{
						"name": "ELECTED_OFFICIAL",
						"type": "String"
					},
					{
						"name": "DATE_STARTED",
						"type": "String"
					},
					{
						"name": "SEX",
						"type": "String"
					},
					{
						"name": "ETHNICITY",
						"type": "String"
					},
					{
						"name": "ORIG_START",
						"type": "String"
					},
					{
						"name": "DATE_TERM",
						"type": "String"
					},
					{
						"name": "PAY_STATUS",
						"type": "String"
					},
					{
						"name": " ANNUAL_SALARY ",
						"type": "String"
					},
					{
						"name": " REGULAR_PAY ",
						"type": "String"
					},
					{
						"name": " OVERTIME_PAY ",
						"type": "String"
					},
					{
						"name": " INCENTIVE_PAY ",
						"type": "String"
					},
					{
						"name": " GROSS_PAY ",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_44d')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "paydata",
						"folderPath": "input",
						"container": "datafactory"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_sxa')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SecondDatafile",
						"folderPath": "output",
						"container": "datafactory"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_44d')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GoogleCloudStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "GoogleCloudStorageLocation",
						"bucketName": "infosyncdataset",
						"fileName": "redacted-2022-december-31-wprdc.csv"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GoogleCloudStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_sxa')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GoogleCloudStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "GoogleCloudStorageLocation",
						"bucketName": "infosyncdataset",
						"fileName": "redacted-2022-december-31-wprdc.csv"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GoogleCloudStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleCloudStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "GoogleCloudStorage",
				"typeProperties": {
					"serviceUrl": "https://storage.googleapis.com",
					"accessKeyId": "[parameters('GoogleCloudStorage1_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('GoogleCloudStorage1_secretAccessKey')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyPipeline_44d",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2023-08-07T05:00:00",
						"timeZone": "Central Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_44d')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "DelimitedText1",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DelimitedText1",
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared DelimitedText1 = let AdfDoc = AzureStorage.BlobContents(\"https://storage3jssinfnaex3m.blob.core.windows.net/datafactory/output/paydata\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]) in  PromotedHeaders;\r\nshared UserQuery = let Source = #\"DelimitedText1\" in Source;\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "DelimitedText2",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DelimitedText2",
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared DelimitedText2 = let AdfDoc = AzureStorage.BlobContents(\"https://storage3jssinfnaex3m.blob.core.windows.net/datafactory/output/SecondDatafile\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]) in  PromotedHeaders;\r\nshared UserQuery = let Source = #\"DelimitedText2\",\r\n  #\"Filtered rows\" = Table.SelectRows(Source, each ([DATE_TERM] = \"\")) in #\"Filtered rows\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		}
	]
}